/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Clases.Barberia;
import Clases.Cita;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alvar_000
 */
public class VentanaCitas extends javax.swing.JDialog {
    Barberia barberia = Barberia.getInstance();
    /**
     * Creates new form VentanaCitas
     */
    public VentanaCitas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        refrescarValoresTablaCitas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDayChooser1 = new com.toedter.calendar.JDayChooser();
        jLabel1 = new javax.swing.JLabel();
        scrPanel = new javax.swing.JScrollPane();
        tablaCitas = new javax.swing.JTable();
        btnCrearCita = new javax.swing.JButton();
        btnEditarCita = new javax.swing.JButton();
        btnEliminarCita = new javax.swing.JButton();
        btnEnviarNotificacion = new javax.swing.JButton();
        btnCambiarEstadoCita = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Lista de citas");

        tablaCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Correo", "Servicio", "Fecha", "Hora", "Confirmada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCitasMouseClicked(evt);
            }
        });
        scrPanel.setViewportView(tablaCitas);

        btnCrearCita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Íconos/add.png"))); // NOI18N
        btnCrearCita.setToolTipText("Agregar nueva cita");
        btnCrearCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCitaActionPerformed(evt);
            }
        });

        btnEditarCita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Íconos/edit.png"))); // NOI18N
        btnEditarCita.setToolTipText("Editar cita seleccionada");
        btnEditarCita.setEnabled(false);
        btnEditarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCitaActionPerformed(evt);
            }
        });

        btnEliminarCita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Íconos/delete.png"))); // NOI18N
        btnEliminarCita.setToolTipText("Eliminar cita seleccionada");
        btnEliminarCita.setEnabled(false);
        btnEliminarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCitaActionPerformed(evt);
            }
        });

        btnEnviarNotificacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Íconos/mail.png"))); // NOI18N
        btnEnviarNotificacion.setToolTipText("Enviar notificación de cita al cliente seleccionado");
        btnEnviarNotificacion.setEnabled(false);
        btnEnviarNotificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarNotificacionActionPerformed(evt);
            }
        });

        btnCambiarEstadoCita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Íconos/check.png"))); // NOI18N
        btnCambiarEstadoCita.setToolTipText("Cambiar estado de cita");
        btnCambiarEstadoCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarEstadoCitaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1043, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCrearCita, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditarCita, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminarCita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEnviarNotificacion, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(btnCambiarEstadoCita, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCrearCita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarCita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarCita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviarNotificacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCambiarEstadoCita)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCitaActionPerformed
        // TODO add your handling code here:
        new CrearCita(null, true).setVisible(true);
        refrescarValoresTablaCitas();
        
        btnEditarCita.setEnabled(false);
        btnEliminarCita.setEnabled(false);
        btnEnviarNotificacion.setEnabled(false);
        btnCambiarEstadoCita.setEnabled(false);
        
    }//GEN-LAST:event_btnCrearCitaActionPerformed

    private void tablaCitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCitasMouseClicked
        // TODO add your handling code here
        if(Barberia.getInstance().obtenerCitas().size() > 0){
            btnEditarCita.setEnabled(true);
            btnEliminarCita.setEnabled(true);
            btnEnviarNotificacion.setEnabled(true);
            btnCambiarEstadoCita.setEnabled(true);
            
        }
    }//GEN-LAST:event_tablaCitasMouseClicked

    private void btnEditarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCitaActionPerformed
        // TODO add your handling code here:
        if(tablaCitas.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this,"Debes seleccionar una cita primero.","Seleccione una cita primero",0, new javax.swing.ImageIcon(getClass().getResource("/Íconos/mail.png")));
        }
        new CrearCita(null, true,Barberia.getInstance().obtenerCitas().get(tablaCitas.getSelectedRow())).setVisible(true);
        refrescarValoresTablaCitas();
        
        btnEditarCita.setEnabled(false);
        btnEliminarCita.setEnabled(false);
        btnEnviarNotificacion.setEnabled(false);
        btnCambiarEstadoCita.setEnabled(false);
        
    }//GEN-LAST:event_btnEditarCitaActionPerformed

    private void btnEliminarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCitaActionPerformed
        // TODO add your handling code here:
        int opcion = (int) JOptionPane.showConfirmDialog(this,"¿Está seguro que desea eliminar esta cita?", "Eliminar cita", 0,0, new javax.swing.ImageIcon(getClass().getResource("/Íconos/delete.png")));

        if(opcion == 0){
            btnEditarCita.setEnabled(false);
            btnEliminarCita.setEnabled(false);
            btnEnviarNotificacion.setEnabled(false);
            btnCambiarEstadoCita.setEnabled(false);
            
            Barberia.getInstance().obtenerCitas().remove(tablaCitas.getSelectedRow());
            refrescarValoresTablaCitas();
        }
        
    }//GEN-LAST:event_btnEliminarCitaActionPerformed

    private void btnEnviarNotificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarNotificacionActionPerformed
        // TODO add your handling code here:
        Iterator<Cita> citas = barberia.obtenerCitas().iterator();
        System.out.println(""+citas);
        while(citas.hasNext()){
            Cita actual = citas.next();
            if(actual.isConfirmado()==false){
                System.out.println(""+actual);
                barberia.enviarNotificacion(actual);
                
            }
        }
        JOptionPane.showMessageDialog(this,"Se ha enviado un correo a cada cliente con citas sin confirmar.","Notificacion de envío de correo",0, new javax.swing.ImageIcon(getClass().getResource("/Íconos/mail.png")));
        btnEditarCita.setEnabled(false);
        btnEliminarCita.setEnabled(false);
        btnEnviarNotificacion.setEnabled(false);
        btnCambiarEstadoCita.setEnabled(false);
    }//GEN-LAST:event_btnEnviarNotificacionActionPerformed

    private void btnCambiarEstadoCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarEstadoCitaActionPerformed
        // TODO add your handling code here:
        btnEditarCita.setEnabled(false);
        btnEliminarCita.setEnabled(false);
        btnEnviarNotificacion.setEnabled(false);
        btnCambiarEstadoCita.setEnabled(false);
        
        if(Barberia.getInstance().obtenerCitas().get(tablaCitas.getSelectedRow()).isConfirmado()){
            Barberia.getInstance().obtenerCitas().get(tablaCitas.getSelectedRow()).setConfirmado(false);
        }
        else{
            Barberia.getInstance().obtenerCitas().get(tablaCitas.getSelectedRow()).setConfirmado(true);
        }
        refrescarValoresTablaCitas();
    }//GEN-LAST:event_btnCambiarEstadoCitaActionPerformed

    
    private void refrescarValoresTablaCitas(){
        DefaultTableModel modelo = new DefaultTableModel();
        //modelo.setRowCount(Barberia.getInstance().obtenerClientes().size());
        modelo.setColumnCount(6);
        
        modelo.setColumnIdentifiers(new Object[]{"Nombre","Correo","Servicio","Fecha","Hora","Confirmada"});
        
        Barberia.getInstance().obtenerCitas().stream().forEach((cita) -> {
            modelo.addRow(new Object[]{cita.getCliente().getNombre(),cita.getCliente().getCorreo(),cita.getServicio(),cita.getFecha().toString(),cita.getHora(),cita.isConfirmado()});
        });
        tablaCitas.setModel(modelo);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaCitas dialog = new VentanaCitas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCambiarEstadoCita;
    private javax.swing.JButton btnCrearCita;
    private javax.swing.JButton btnEditarCita;
    private javax.swing.JButton btnEliminarCita;
    private javax.swing.JButton btnEnviarNotificacion;
    private com.toedter.calendar.JDayChooser jDayChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane scrPanel;
    private javax.swing.JTable tablaCitas;
    // End of variables declaration//GEN-END:variables
}
