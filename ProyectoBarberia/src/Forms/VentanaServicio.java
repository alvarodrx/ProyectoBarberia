/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import javax.swing.DefaultListModel;
import Clases.Barberia;
import Clases.Cita;
import Clases.Servicio;
import javax.swing.JOptionPane;



//Este es un comentario
/**
 *
 * @author AS
 */
public class VentanaServicio extends javax.swing.JDialog {

    /**
     * Creates new form VentanaServicio
     * @param parent
     * @param modal
     */
    public VentanaServicio(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        refrescarValoresListaServicios();
        
        
        java.awt.Dimension dimensionListaServicios = listaServicios.getPreferredSize(); //-------
        dimensionListaServicios.width = 265;                                            //-------
        jscrPanel.setPreferredSize(dimensionListaServicios);                            //-------
        refrescarValoresListaServicios();                                               //-------
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCerrar = new javax.swing.JButton();
        jscrPanel = new javax.swing.JScrollPane();
        listaServicios = new javax.swing.JList();
        lblTitulo = new javax.swing.JLabel();
        btnAgregarServicio = new javax.swing.JButton();
        btnEditarServicio = new javax.swing.JButton();
        btnEliminarServicio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        listaServicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaServiciosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listaServiciosMousePressed(evt);
            }
        });
        jscrPanel.setViewportView(listaServicios);

        lblTitulo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblTitulo.setText("Lista de Servicios Disponibles");

        btnAgregarServicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Íconos/add.png"))); // NOI18N
        btnAgregarServicio.setToolTipText("Agregar un nuevo servicio");
        btnAgregarServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarServicioActionPerformed(evt);
            }
        });

        btnEditarServicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Íconos/edit.png"))); // NOI18N
        btnEditarServicio.setToolTipText("Editar servicio seleccionado");
        btnEditarServicio.setEnabled(false);
        btnEditarServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarServicioActionPerformed(evt);
            }
        });

        btnEliminarServicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Íconos/delete.png"))); // NOI18N
        btnEliminarServicio.setToolTipText("Eliminar servicio seleccionado");
        btnEliminarServicio.setEnabled(false);
        btnEliminarServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarServicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jscrPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCerrar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAgregarServicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditarServicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarServicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jscrPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCerrar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregarServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean verificarExistenciaDeServicio(String servicio){
        for(int i = 0; i < Barberia.getInstance().obtenerServicios().size(); i++){
            if(Barberia.getInstance().obtenerServicios().get(i).getDescripcion().equals(servicio)){
                return true;
            }
        }
        return false;
    }
    
    private void refrescarValoresListaServicios(){
        DefaultListModel modeloListaServicios = new DefaultListModel();
        
        for(int i = 0; i< Barberia.getInstance().obtenerServicios().size(); i++){
            modeloListaServicios.add(i, Barberia.getInstance().obtenerServicios().get(i).getDescripcion());
        }       
        listaServicios.setModel(modeloListaServicios);
    }
    
    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnAgregarServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarServicioActionPerformed
        // TODO add your handling code here:
   
        try{
            String servicio = (String) JOptionPane.showInputDialog(this,"Ingrese una descripción del nuevo Servicio", "Agregar servicio", 3, new javax.swing.ImageIcon(getClass().getResource("/Íconos/barbershop.png")),null,null);

            if(servicio.equals("")){        
                JOptionPane.showMessageDialog(null, "El Servicio debe contener una descripción","Mensaje vacío",0);
            }
            else{
                if(verificarExistenciaDeServicio(servicio)){
                    JOptionPane.showMessageDialog(null, "El servicio ya existe","Error al agregar Servicio",0);
                }
                else{
                    //Se puede validar que si el servicio ya está que no lo cree. Pero por ahora: WIII funciona /._./
                    Barberia.getInstance().crearServicio(servicio);
                    JOptionPane.showMessageDialog(null, "Nuevo servicio creado: " + servicio,"Servicio creado exitosamente",0, new javax.swing.ImageIcon(getClass().getResource("/Íconos/barbershop.png"))); //-------
                    refrescarValoresListaServicios();
                    btnEliminarServicio.setEnabled(false);
                    btnEditarServicio.setEnabled(false);
                }
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Debe ingresar una descripción", "Servicio no agregado",0);
        }
            
        
    }//GEN-LAST:event_btnAgregarServicioActionPerformed

    private void btnEliminarServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarServicioActionPerformed
        // TODO add your handling code here:
        
        //Parent, message, tittle, optiontype, messagetype, icon
        int opcionBorrar = (int) JOptionPane.showConfirmDialog(this,"¿Está seguro que desea eliminar este servicio?", "Eliminar servicio", 0,0, new javax.swing.ImageIcon(getClass().getResource("/Íconos/delete.png")));
        
        if(opcionBorrar == 0){
            
            btnEliminarServicio.setEnabled(false);
            btnEditarServicio.setEnabled(false);
            
            if(tieneCita(Barberia.getInstance().obtenerServicios().get(listaServicios.getSelectedIndex()))){
                JOptionPane.showMessageDialog(this, "El servicio está incluido en una cita.","Error al eliminar servicio",0);
            }
            else{
                Barberia.getInstance().borrarServicio(Barberia.getInstance().obtenerServicios().get(listaServicios.getSelectedIndex()));
                refrescarValoresListaServicios();
            }
             
            
        }
    }//GEN-LAST:event_btnEliminarServicioActionPerformed

    private void btnEditarServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarServicioActionPerformed
        // TODO add your handling code here:
        
        try{
            String edicion = (String) JOptionPane.showInputDialog(this,"Ingrese una nueva descripción del Servicio", "Editar Servicio", 3, new javax.swing.ImageIcon(getClass().getResource("/Íconos/edit.png")),null,null);

            if(edicion.equals("")){
                JOptionPane.showMessageDialog(null, "La nueva descripción no puede estar vacía","Servicio no modificado",0);
            }
            else{
                Barberia.getInstance().obtenerServicios().get(listaServicios.getSelectedIndex()).setDescripcion(edicion);
                
                JOptionPane.showMessageDialog(null, "La nueva descripción del servicio es: " + edicion,"Servicio editado exitosamente",0, new javax.swing.ImageIcon(getClass().getResource("/Íconos/edit.png")));
                
                refrescarValoresListaServicios();
                btnEditarServicio.setEnabled(false);
                btnEliminarServicio.setEnabled(false);   
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Debe ingresar una nueva descripción", "Servicio no modificado",0);
        }
        
        
    }//GEN-LAST:event_btnEditarServicioActionPerformed

    private void listaServiciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaServiciosMouseClicked
        // TODO add your handling code here:
        btnEditarServicio.setEnabled(true);
        btnEliminarServicio.setEnabled(true);
    }//GEN-LAST:event_listaServiciosMouseClicked

    private void listaServiciosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaServiciosMousePressed
        // TODO add your handling code here:
        btnEditarServicio.setEnabled(true);
        btnEliminarServicio.setEnabled(true);
    }//GEN-LAST:event_listaServiciosMousePressed

    private boolean tieneCita(Servicio servicio){
        
        return Barberia.getInstance().obtenerCitas().stream().anyMatch((cita) -> (cita.getServicio() == servicio));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaServicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaServicio dialog = new VentanaServicio(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarServicio;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEditarServicio;
    private javax.swing.JButton btnEliminarServicio;
    private javax.swing.JScrollPane jscrPanel;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JList listaServicios;
    // End of variables declaration//GEN-END:variables
}
